local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local KEY = "jillybartender"
local KEY_LINK = "https://workink.net/27mm/s1h3m5wf"

local Window = Rayfield:CreateWindow({
    Name = "Poop Auto Farm",
    LoadingTitle = "Booting Systems...",
    LoadingSubtitle = "Poop Master Elite üßª",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = "PoopUI",
       FileName = "Settings"
    },
    KeySystem = false
})

local KeyTab = Window:CreateTab("Key System")

KeyTab:CreateInput({
    Name = "Enter Key",
    PlaceholderText = "Enter your key here",
    RemoveTextAfterFocusLost = false,
    Callback = function(text)
        if text == KEY then
            Rayfield:Notify({Title="Success ‚úÖ", Content="Key Verified! Loading UI..."})

         
            local Tab = Window:CreateTab("Auto Farm")
            Tab:CreateSection("Farming Controls")

            _G.Config = {
                poop = false,
                sell = false,
                delays = { poop = 0.1, sell = 1 }
            }

            local Remotes = {
                startPoop = game.ReplicatedStorage:WaitForChild("StartPoopMinigameServer"),
                poopSuccess = game.ReplicatedStorage:WaitForChild("PoopSuccessEvent"),
                sellBrainrot = game.ReplicatedStorage:WaitForChild("SellBrainrotRequest")
            }

            Tab:CreateToggle({
                Name = "Auto Poop",
                CurrentValue = false,
                Flag = "AutoPoop",
                Callback = function(val)
                    _G.Config.poop = val
                    task.spawn(function()
                        while _G.Config.poop do
                            Remotes.startPoop:FireServer()
                            Remotes.poopSuccess:FireServer()
                            task.wait(_G.Config.delays.poop)
                        end
                    end)
                end,
            })

            Tab:CreateSlider({
                Name = "Poop Delay",
                Range = {0.05, 1},
                Increment = 0.01,
                Suffix = "Seconds",
                CurrentValue = 0.1,
                Flag = "PoopDelay",
                Callback = function(val)
                    _G.Config.delays.poop = val
                end,
            })

            Tab:CreateToggle({
                Name = "Auto Sell",
                CurrentValue = false,
                Flag = "AutoSell",
                Callback = function(val)
                    _G.Config.sell = val
                    task.spawn(function()
                        while _G.Config.sell do
                            Remotes.sellBrainrot:InvokeServer("all")
                            task.wait(_G.Config.delays.sell)
                        end
                    end)
                end,
            })

            Tab:CreateSlider({
                Name = "Sell Delay",
                Range = {0.2, 3},
                Increment = 0.01,
                Suffix = "Seconds",
                CurrentValue = 1,
                Flag = "SellDelay",
                Callback = function(val)
                    _G.Config.delays.sell = val
                end,
            })

            Window:CreateKeybind({
                Name = "Toggle UI",
                CurrentKeybind = "RightShift",
                HoldToInteract = false,
                Flag = "UIBind",
                Callback = function()
                    Rayfield:Toggle()
                end,
            })

            KeyTab:Set("Access Granted")

            if Rayfield.LoadConfiguration then
                pcall(function() Rayfield:LoadConfiguration() end)
            end
        else
            Rayfield:Notify({Title="Incorrect Key ‚ùå", Content="Try again!"})
        end
    end
})

KeyTab:CreateButton({
    Name = "Copy Key Link",
    Callback = function()
        if setclipboard then
            setclipboard(KEY_LINK)
            Rayfield:Notify({Title="Copied ‚úÖ", Content="Key link copied to clipboard"})
        else
            Rayfield:Notify({Title="Clipboard Unsupported", Content="Your executor doesn't support setclipboard()"})
        end
    end
})
